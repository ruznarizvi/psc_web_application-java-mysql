package com.collectionofficer.psc.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.collectionofficer.psc.bean.CollectPaddy;
import com.collectionofficer.psc.bean.CollectionOfficerProfile;



public class CollectionOfficerProfileDao {
	
	private String jdbcURL = "jdbc:mysql://localhost:3306/psc_web_app?allowPublicKeyRetrieval=true";
	private String jdbcUsername = "root";
	private String jdbcPassword = "Ruzna_421455";
	private String jdbcDriver = "com.mysql.cj.jdbc.Driver";
	
	
	private static final String UPDATE_COLLECTION_OFFICER_PROFILE_SQL = "update tbl_collection_officer set collection_officer_Name = ?,collection_officer_Email= ?, collection_officer_Address = ? , collection_officer_Contact = ? where collection_officer_Id = ?;";

	
	//generating constructor
	public CollectPaddyDao() {

	}
	
	//writing a method to get the connection of jdbc and inside it loading the driver also,
	//the method will return the connection
	// simply said inside this method: 
	//1. loading the connection 
	//2. getting the connection 
	//3. returning connection
	public Connection getConnection() {
		Connection connection = null;
		try {
			//loading the driver, jdbc driver is a variable assigned above
			Class.forName(jdbcDriver);
			//getting the connection using the driver manager class
			connection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return connection;
	}
	
	
	
	//update user method
	//boolean to check whether the update method is executed or not
	//updating the user by passing the object of the user
	public boolean updateCollectionOfficerProfile(CollectionOfficerProfile collectionOfficerProfile) throws SQLException {
		//rowUpdated variable of a boolean type 
		boolean rowUpdated;
		try (Connection connection = getConnection();
				PreparedStatement statement = connection.prepareStatement(UPDATE_COLLECTION_OFFICER_PROFILE_SQL);) {
			System.out.println("updated paddy:"+statement);
			//Calling the set string to set the name, email, and country
			statement.setString(1, collectionOfficerProfile.getCollection_officer_Name());
			statement.setString(2, collectionOfficerProfile.getCollection_officer_Email());
			statement.setString(3, collectionOfficerProfile.getCollection_officer_Address());
			statement.setInt(4, collectionOfficerProfile.getCollection_officer_Contact());
					
			
			//calling the executeUpdate method, here is where boolean comes
			//if its greater than 0 then only carry out the executeUpdate method
			//if its greater than 0 then rowUpdated will be true
			rowUpdated = statement.executeUpdate() > 0;
		}
		return rowUpdated;
	}
	
	
	private void printSQLException(SQLException ex) {
		// ex is the object of the sql exception
		for (Throwable e : ex) {
			//if the instance is of the sql exception then;
			if (e instanceof SQLException) {
				e.printStackTrace(System.err);
				//print all sql error;
				System.err.println("SQLState: " + ((SQLException) e).getSQLState());
				System.err.println("Error Code: " + ((SQLException) e).getErrorCode());
				System.err.println("Message: " + e.getMessage());
				//and then running the getcause method to get the cause which is stored in 't'
				Throwable t = ex.getCause();
				//then we run a while loop to show the cause of the exception
				while (t != null) {
					System.out.println("Cause: " + t);
					t = t.getCause();
				}
			}
		}
	}
	
}