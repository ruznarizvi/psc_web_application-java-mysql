package com.xadmin.usermanagement.web;

import java.io.IOException;
import java.sql.SQLException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.xadmin.usermanagement.bean.User;
import com.xadmin.usermanagement.dao.UserDao;

/**
 * Servlet implementation class UserServlet
 */
@WebServlet("/")
public class UserServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	private UserDao userDao;

	/**
	 * @see Servlet#init(ServletConfig)
	 */
	public void init() throws ServletException {
	  userDao = new UserDao();
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	
	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String action = request.getServletPath();
		try {
		//writing a switch case to handle all the actions
		switch(action)
		{
		case "/new":
			//if the action is new, we are going to call the showNewForm method
			// we are [assing the request and response to the http servlet
			showNewForm(request, response);
		break;
		
		case "/insert":
				insertUser(request, response);
				//create another method in here to run both methods simultaneously (CollectionOfficer)
		
			break;
		
		case "/delete":
				deleteUser(request, response);
			break;
			
		case "/edit":
				showEditForm(request, response);
		
			break;
			
		case "/update":
				updateUser(request, response);
			break;
	
			
			//if there is any other action other than the above then it will go to default
			//the list keyword will be handled by the default section
			//simply said it will call the user list KEY and show all the list users in the page
			default:
				listUser(request, response);
				break;
		}
	}
		catch (SQLException ex) {
			throw new ServletException(ex);
		}
	}

	//showNewForm method
	private void showNewForm(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		RequestDispatcher dispatcher = request.getRequestDispatcher("user-form.jsp");
		//to forward the request and response to the user form.jsp file
		dispatcher.forward(request, response);
		
	}

	//insert user method
	private void insertUser(HttpServletRequest request, HttpServletResponse response) throws SQLException, IOException {
		
		//by the help of the request object using the get parameter method, we are taking the name, email, country from the jsp page
		String name = request.getParameter("name");
		String email = request.getParameter("email");
		String country = request.getParameter("country");
		
		//after that we are storing it in the userBean class
		//the newUser variable contains the data
		User newUser = new User(name, email, country);
		//then we are calling the insertUser method of the UserDao class created
		userDao.insertUser(newUser);
		//sending a response to the sendRedirect list taking the action as a list
		//the list action will be handled by the default in the swicth statement since its different
		response.sendRedirect("list");
	}
	
	
	



}
