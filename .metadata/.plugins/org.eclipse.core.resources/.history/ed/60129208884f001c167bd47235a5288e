package com.collectionofficer.psc.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import com.collectionofficer.psc.bean.CollectPaddy;
import com.xadmin.usermanagement.bean.User;

public class CollectPaddyDao {
	
	private String jdbcURL = "jdbc:mysql://localhost:3306/psc_web_app?allowPublicKeyRetrieval=true&useSSL=false";
	private String jdbcUsername = "root";
	private String jdbcPassword = "Ruzna_421455";
	private String jdbcDriver = "com.mysql.cj.jdbc.Driver";
	
	
	private static final String INSERT_COLLECTED_PADDY_SQL = "INSERT INTO tbl_collected_paddy_details" + " (farmer_Id, paddy_Id, total_weight) VALUES " + " (?, ?, ?);";
	private static final String SELECT_COLLECTED_PADDY_BY_ID = "select collected_paddy_details_Id,farmer_Id, paddy_Id, total_weight from tbl_collected_paddy_details where collected_paddy_details_Id =?";
	private static final String SELECT_ALL_COLLECTED_PADDY = "select * from tbl_collected_paddy_details";
	private static final String DELETE_COLLECTED_PADDY_SQL = "delete from tbl_collected_paddy_details where collected_paddy_details_Id = ?;";
	private static final String UPDATE_COLLECTED_PADDY_SQL = "update tbl_collected_paddy_details set farmer_Id = ?,paddy_Id= ?, total_weight =? where collected_paddy_details_Id = ?;";

	
	//generating constructor
	public CollectPaddyDao() {

	}
	
	//writing a method to get the connection of jdbc and inside it loading the driver also,
	//the method will return the connection
	// simply said inside this method: 
	//1. loading the connection 
	//2. getting the connection 
	//3. returning connection
	public Connection getConnection() {
		Connection connection = null;
		try {
			//loading the driver, jdbc driver is a variable assigned above
			Class.forName(jdbcDriver);
			//getting the connection using the driver manager class
			connection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return connection;
	}
	
	
	public void insertPaddy(CollectPaddy collectPaddy) throws SQLException {
		//show in the console
		System.out.println(INSERT_COLLECTED_PADDY_SQL);
		// try-with-resource statement will auto close the connection.
		// calling the getconnection method to get the connection of the jdbc and assigning it to the connection object
		try (Connection connection = getConnection();
			//with the help of the connection object, we are creating the preparestatement inside that we have passed the insert query
			PreparedStatement preparedStatement = connection.prepareStatement(INSERT_COLLECTED_PADDY_SQL)) {
			//after that we are calling the set string method to set the name, email, and country
			preparedStatement.setInt(1, collectPaddy.getFarmer_Id());
			preparedStatement.setInt(2, collectPaddy.getPaddy_Id());
			preparedStatement.setInt(3, collectPaddy.getTotal_weight());
			System.out.println(preparedStatement);
			//finally we are calling the executeupdate method to run the query with the database to insert data
			preparedStatement.executeUpdate();
		} catch (SQLException e) {
			//we are calling a print sqlexception method to handle all the exceptions below we are writing the method
			printSQLException(e);
		}
	}

	private void printSQLException(SQLException ex) {
		// ex is the object of the sql exception
		for (Throwable e : ex) {
			//if the instance is of the sql exception then;
			if (e instanceof SQLException) {
				e.printStackTrace(System.err);
				//print all sql error;
				System.err.println("SQLState: " + ((SQLException) e).getSQLState());
				System.err.println("Error Code: " + ((SQLException) e).getErrorCode());
				System.err.println("Message: " + e.getMessage());
				//and then running the getcause method to get the cause which is stored in 't'
				Throwable t = ex.getCause();
				//then we run a while loop to show the cause of the exception
				while (t != null) {
					System.out.println("Cause: " + t);
					t = t.getCause();
				}
			}
		}
	}
	
}